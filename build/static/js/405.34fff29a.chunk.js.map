{"version":3,"file":"static/js/405.34fff29a.chunk.js","mappings":"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","sources":["components/workouts/WorkoutList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport workoutService from '../../services/workoutService';\r\nimport Asset from '../common/Asset';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst WorkoutList = ({ filter = \"\" }) => {\r\n  const [workouts, setWorkouts] = useState({ results: [] });\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [workoutType, setWorkoutType] = useState('all');\r\n  const [sortOrder, setSortOrder] = useState('-date_logged');\r\n  const [isTableExpanded, setIsTableExpanded] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchWorkouts = async () => {\r\n      try {\r\n        const data = await workoutService.getWorkouts({\r\n          ...filter && { filter },\r\n          ordering: sortOrder\r\n        });\r\n        setWorkouts(data);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error fetching workouts:', err);\r\n        setError('Failed to load workouts');\r\n      } finally {\r\n        setHasLoaded(true);\r\n      }\r\n    };\r\n\r\n    setHasLoaded(false);\r\n    const timer = setTimeout(() => {\r\n      fetchWorkouts();\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [filter, sortOrder]);\r\n\r\n  const handleDelete = async (workoutId) => {\r\n    if (window.confirm('Are you sure you want to delete this workout?')) {\r\n      try {\r\n        await workoutService.deleteWorkout(workoutId);\r\n        setWorkouts(prevWorkouts => ({\r\n          ...prevWorkouts,\r\n          results: prevWorkouts.results.filter(workout => workout.id !== workoutId)\r\n        }));\r\n      } catch (err) {\r\n        setError('Failed to delete workout');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-6 bg-white rounded shadow-md text-center max-w-lg mx-auto\">\r\n        <Alert variant=\"warning\">{error}</Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!hasLoaded) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <Asset spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const totalWorkouts = workouts.results.length;\r\n  const totalDuration = workouts.results.reduce((sum, w) => sum + w.duration, 0);\r\n  const avgDuration = Math.round(totalDuration / totalWorkouts) || 0;\r\n\r\n  const chartData = workouts.results\r\n    .slice(0, 7)\r\n    .map(workout => ({\r\n      date: new Date(workout.date_logged).toLocaleDateString(),\r\n      duration: workout.duration,\r\n    }))\r\n    .reverse();\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-4\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800\">{filter ? 'Activity Feed' : 'Workouts'}</h2>\r\n        <button\r\n          onClick={() => navigate('/workouts/create')}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded shadow hover:bg-green-700\"\r\n        >\r\n          <i className=\"fas fa-plus mr-2\"></i> Log Workout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Stats Summary */}\r\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-8\">\r\n        {[\r\n          { title: 'Total Workouts', value: totalWorkouts, icon: 'fas fa-dumbbell' },\r\n          { title: 'Total Duration', value: `${totalDuration} mins`, icon: 'fas fa-clock' },\r\n          { title: 'Average Duration', value: `${avgDuration} mins`, icon: 'fas fa-chart-line' }\r\n        ].map(({ title, value, icon }) => (\r\n          <div key={title} className=\"p-4 bg-white rounded shadow text-center\">\r\n            <h3 className=\"text-lg font-semibold text-gray-600\">{title}</h3>\r\n            <p className=\"text-xl font-bold text-gray-800 mt-2\">{value}</p>\r\n            <i className={`${icon} text-green-500 text-3xl mt-4`}></i>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chart */}\r\n      {chartData.length > 0 && (\r\n        <div className=\"bg-white p-4 rounded shadow mb-8\">\r\n          <h3 className=\"text-lg font-bold mb-4 text-gray-800\">Activity Overview</h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={chartData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"duration\" stroke=\"#8884d8\" name=\"Duration (min)\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <div className=\"flex gap-4 mb-6\">\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-semibold text-gray-600\">Workout Type</label>\r\n          <select\r\n            value={workoutType}\r\n            onChange={(e) => setWorkoutType(e.target.value)}\r\n            className=\"border rounded p-2 text-gray-700\"\r\n          >\r\n            <option value=\"all\">All Types</option>\r\n            <option value=\"cardio\">Cardio</option>\r\n            <option value=\"strength\">Strength</option>\r\n            <option value=\"flexibility\">Flexibility</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"text-sm font-semibold text-gray-600\">Sort By</label>\r\n          <select\r\n            value={sortOrder}\r\n            onChange={(e) => setSortOrder(e.target.value)}\r\n            className=\"border rounded p-2 text-gray-700\"\r\n          >\r\n            <option value=\"-date_logged\">Newest First</option>\r\n            <option value=\"date_logged\">Oldest First</option>\r\n            <option value=\"-duration\">Duration (High to Low)</option>\r\n            <option value=\"duration\">Duration (Low to High)</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Workout Table */}\r\n      <div className=\"bg-white rounded shadow overflow-hidden\">\r\n        <div className=\"flex justify-between items-center p-4\">\r\n          <h3 className=\"text-lg font-bold text-gray-800\">Workout History</h3>\r\n          <button\r\n            onClick={() => setIsTableExpanded(!isTableExpanded)}\r\n            className=\"text-gray-500 hover:text-gray-800\"\r\n          >\r\n            <i className={`fas fa-chevron-${isTableExpanded ? 'up' : 'down'}`}></i>\r\n          </button>\r\n        </div>\r\n\r\n        <div className={`${isTableExpanded ? 'max-h-full' : 'max-h-64 overflow-y-auto'}`}>\r\n          {workouts.results.length > 0 ? (\r\n            <table className=\"w-full text-left\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"p-3\">Date</th>\r\n                  <th className=\"p-3\">Type</th>\r\n                  <th className=\"p-3\">Duration</th>\r\n                  <th className=\"p-3\">Intensity</th>\r\n                  <th className=\"p-3\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {workouts.results\r\n                  .filter(workout => workoutType === 'all' || workout.workout_type === workoutType)\r\n                  .map((workout) => (\r\n                    <tr key={workout.id} className=\"border-t\">\r\n                      <td className=\"p-3\">{new Date(workout.date_logged).toLocaleDateString()}</td>\r\n                      <td className=\"p-3 capitalize\">{workout.workout_type}</td>\r\n                      <td className=\"p-3\">{workout.duration} mins</td>\r\n                      <td className=\"p-3 capitalize\">\r\n                        <span className={`px-2 py-1 rounded ${workout.intensity === 'high' ? 'bg-red-100 text-red-600' : workout.intensity === 'moderate' ? 'bg-yellow-100 text-yellow-600' : 'bg-green-100 text-green-600'}`}>\r\n                          {workout.intensity}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"p-3 space-x-2\">\r\n                        <button onClick={() => navigate(`/workouts/${workout.id}/edit`)} className=\"text-blue-600 hover:text-blue-800\">\r\n                          <i className=\"fas fa-edit\"></i>\r\n                        </button>\r\n                        <button onClick={() => handleDelete(workout.id)} className=\"text-red-600 hover:text-red-800\">\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <div className=\"text-center p-4\">\r\n              <p>No workouts recorded yet. Start logging your fitness journey!</p>\r\n              <button\r\n                onClick={() => navigate('/workouts/create')}\r\n                className=\"mt-4 bg-green-600 text-white px-4 py-2 rounded shadow hover:bg-green-700\"\r\n              >\r\n                <i className=\"fas fa-plus\"></i> Log Your First Workout\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutList;\r\n"],"names":["_ref","filter","workouts","setWorkouts","useState","results","hasLoaded","setHasLoaded","error","setError","workoutType","setWorkoutType","sortOrder","setSortOrder","isTableExpanded","setIsTableExpanded","navigate","useNavigate","useEffect","timer","setTimeout","async","data","workoutService","getWorkouts","ordering","err","console","fetchWorkouts","clearTimeout","_jsx","className","children","Alert","variant","Asset","spinner","totalWorkouts","length","totalDuration","reduce","sum","w","duration","avgDuration","Math","round","chartData","slice","map","workout","date","Date","date_logged","toLocaleDateString","reverse","_jsxs","onClick","title","value","icon","_ref2","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","type","stroke","name","onChange","e","target","workout_type","intensity","id","window","confirm","deleteWorkout","workoutId","prevWorkouts","handleDelete"],"sourceRoot":""}