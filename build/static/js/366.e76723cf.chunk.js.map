{"version":3,"file":"static/js/366.e76723cf.chunk.js","mappings":"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","sources":["components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { useCurrentUser } from '../../contexts/CurrentUserContext';\r\nimport { workoutService } from '../../services/workoutService';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useCurrentUser();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    workoutsThisWeek: 0,\r\n    activeGoals: 0,\r\n    totalMinutes: 0,\r\n    currentStreak: 0\r\n  });\r\n  const [recentWorkouts, setRecentWorkouts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const [workoutsRes, statsRes] = await Promise.all([\r\n          workoutService.getWorkouts(),\r\n          workoutService.getWorkoutStatistics()\r\n        ]);\r\n\r\n        const workouts = workoutsRes.results || [];\r\n        \r\n        setRecentWorkouts(workouts);\r\n        setStats({\r\n          workoutsThisWeek: workouts.length,\r\n          activeGoals: statsRes.active_goals || 0,\r\n          totalMinutes: workouts.reduce((total, workout) => total + workout.duration, 0),\r\n          currentStreak: statsRes.current_streak || 0\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dashboard data:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Get appropriate greeting based on time of day\r\n  const getGreeting = useMemo(() => {\r\n    const hour = new Date().getHours();\r\n    if (hour < 12) return 'Good morning';\r\n    if (hour < 18) return 'Good afternoon';\r\n    return 'Good evening';\r\n  }, []);\r\n\r\n  const renderWorkoutList = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-500\"></div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (recentWorkouts.length === 0) {\r\n      return <p className=\"text-center text-gray-500\">No workouts logged yet</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {recentWorkouts.map((workout) => (\r\n          <div key={workout.id} className=\"flex items-center gap-4 p-4 bg-gray-50 rounded-lg\">\r\n            <div className=\"h-12 w-12 bg-green-100 rounded-full flex items-center justify-center\">\r\n              <svg className=\"w-6 h-6 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <h3 className=\"font-medium\">{workout.workout_type}</h3>\r\n              <p className=\"text-sm text-gray-500\">\r\n                {format(new Date(workout.date_logged), 'MMM d')} â€¢ {workout.duration} minutes\r\n              </p>\r\n            </div>\r\n            <span className={`px-3 py-1 rounded-full text-sm\r\n              ${workout.intensity === 'high' ? 'bg-red-100 text-red-800' : \r\n                workout.intensity === 'moderate' ? 'bg-yellow-100 text-yellow-800' : \r\n                'bg-green-100 text-green-800'}`}>\r\n              {workout.intensity}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-8 space-y-8\">\r\n      {/* Header Section */}\r\n      <div>\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">\r\n          {getGreeting}, {currentUser?.username}! ðŸ‘‹\r\n        </h1>\r\n        <p className=\"text-gray-500 mt-2\">{format(new Date(), 'EEEE, MMMM d, yyyy')}</p>\r\n      </div>\r\n\r\n      {/* Quick Actions Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {/* Track Workout */}\r\n        <div className=\"bg-white rounded-lg p-6 shadow\">\r\n          <div className=\"mb-4 bg-green-500 w-12 h-12 rounded-full flex items-center justify-center\">\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold\">Track Workout</h3>\r\n          <p className=\"text-gray-600 text-sm\">Log your latest fitness activity</p>\r\n        </div>\r\n\r\n        {/* My Workouts */}\r\n        <div className=\"bg-white rounded-lg p-6 shadow\">\r\n          <div className=\"mb-4 bg-blue-500 w-12 h-12 rounded-full flex items-center justify-center\">\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold\">My Workouts</h3>\r\n          <p className=\"text-gray-600 text-sm\">{stats.workoutsThisWeek} workouts logged</p>\r\n        </div>\r\n\r\n        {/* Active Goals */}\r\n        <div className=\"bg-white rounded-lg p-6 shadow\">\r\n          <div className=\"mb-4 bg-purple-500 w-12 h-12 rounded-full flex items-center justify-center\">\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold\">Active Goals</h3>\r\n          <p className=\"text-gray-600 text-sm\">{stats.activeGoals} goals in progress</p>\r\n        </div>\r\n\r\n        {/* Community */}\r\n        <div className=\"bg-white rounded-lg p-6 shadow\">\r\n          <div className=\"mb-4 bg-orange-500 w-12 h-12 rounded-full flex items-center justify-center\">\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold\">Community</h3>\r\n          <p className=\"text-gray-600 text-sm\">Connect with other fitness enthusiasts</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Grid */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Recent Workouts */}\r\n        <div className=\"lg:col-span-2 bg-white rounded-lg shadow\">\r\n          <div className=\"p-6 flex justify-between items-center border-b\">\r\n            <h2 className=\"text-xl font-bold\">Recent Workouts</h2>\r\n            <button onClick={() => navigate('/workouts')} className=\"text-green-500 hover:text-green-600\">View All</button>\r\n          </div>\r\n          <div className=\"p-6\">{renderWorkoutList()}</div>\r\n        </div>\r\n\r\n        {/* Quick Stats */}\r\n        <div className=\"bg-white rounded-lg shadow\">\r\n          <div className=\"p-6 border-b\">\r\n            <h2 className=\"text-xl font-bold\">Quick Stats</h2>\r\n          </div>\r\n          <div className=\"p-6 space-y-6\">\r\n            <div>\r\n              <div className=\"flex justify-between mb-2\">\r\n                <span className=\"text-gray-600\">Workouts This Week</span>\r\n                <span className=\"font-bold\">{stats.workoutsThisWeek}</span>\r\n              </div>\r\n              <div className=\"h-px bg-gray-100\"></div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex justify-between mb-2\">\r\n                <span className=\"text-gray-600\">Active Goals</span>\r\n                <span className=\"font-bold\">{stats.activeGoals}</span>\r\n              </div>\r\n              <div className=\"h-px bg-gray-100\"></div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex justify-between mb-2\">\r\n                <span className=\"text-gray-600\">Total Minutes</span>\r\n                <span className=\"font-bold\">{stats.totalMinutes}</span>\r\n              </div>\r\n              <div className=\"h-px bg-gray-100\"></div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex justify-between mb-2\">\r\n                <span className=\"text-gray-600\">Current Streak</span>\r\n                <span className=\"font-bold\">{stats.currentStreak} days</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Dashboard","navigate","useNavigate","currentUser","useCurrentUser","loading","setLoading","useState","stats","setStats","workoutsThisWeek","activeGoals","totalMinutes","currentStreak","recentWorkouts","setRecentWorkouts","useEffect","async","workoutsRes","statsRes","Promise","all","workoutService","getWorkouts","getWorkoutStatistics","workouts","results","length","active_goals","reduce","total","workout","duration","current_streak","err","console","error","fetchData","getGreeting","useMemo","hour","Date","getHours","_jsxs","className","children","username","_jsx","format","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","map","workout_type","date_logged","intensity","id"],"sourceRoot":""}