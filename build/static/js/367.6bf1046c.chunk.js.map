{"version":3,"file":"static/js/367.6bf1046c.chunk.js","mappings":"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","sources":["components/workouts/WorkoutForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { workoutService } from '../../services/workoutService';\r\nimport { useWorkout } from '../../contexts/WorkoutContext'; \r\nimport errorHandler from '../../services/errorHandlerService';\r\n\r\nconst WorkoutForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { fetchWorkouts } = useWorkout(); \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const WORKOUT_TYPES = [\r\n    { value: 'cardio', label: 'Cardio' },\r\n    { value: 'strength', label: 'Strength Training' },\r\n    { value: 'flexibility', label: 'Flexibility' },\r\n    { value: 'sports', label: 'Sports' },\r\n    { value: 'other', label: 'Other' },\r\n  ];\r\n\r\n  const [workoutData, setWorkoutData] = useState({\r\n    workout_type: '',\r\n    duration: '',\r\n    intensity: 'moderate',\r\n    notes: '',\r\n    date_logged: new Date().toISOString().split('T')[0], // Initialize with today's date\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadWorkoutData = async () => {\r\n      if (id) {\r\n        try {\r\n          const existingWorkout = await workoutService.getWorkout(id);\r\n          console.log('Existing Workout:', existingWorkout); // Log for debugging\r\n          setWorkoutData(existingWorkout);\r\n        } catch (err) {\r\n          const handledError = errorHandler.handleApiError(err);\r\n          setErrors(handledError.errors);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadWorkoutData();\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setWorkoutData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setErrors({});\r\n  \r\n    console.log('Submitting workout data:', workoutData); // Debug log\r\n  \r\n    try {\r\n      if (id) {\r\n        await workoutService.updateWorkout(id, workoutData);\r\n      } else {\r\n        await workoutService.createWorkout(workoutData);\r\n      }\r\n      fetchWorkouts(); \r\n      navigate('/workouts');\r\n    } catch (err) {\r\n      const handledError = errorHandler.handleApiError(err);\r\n      setErrors(handledError.errors);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Add a check to prevent errors accessing properties of undefined\r\n  if (!workoutData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"max-w-2xl mx-auto p-4\">\r\n      <h2 className=\"text-lg font-bold mb-4\">{id ? 'Update Workout' : 'Create Workout'}</h2>\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Workout Type</label>\r\n          <select\r\n            name=\"workout_type\"\r\n            value={workoutData.workout_type}\r\n            onChange={handleChange}\r\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm ${errors.workout_type ? 'border-red-500' : ''}`}\r\n          >\r\n            <option value=\"\">Select type</option>\r\n            {WORKOUT_TYPES.map(type => (\r\n              <option key={type.value} value={type.value}>\r\n                {type.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.workout_type && (\r\n            <p className=\"text-red-500 text-sm mt-1\">{errors.workout_type}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Duration (minutes)</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"duration\"\r\n            value={workoutData.duration}\r\n            onChange={handleChange}\r\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm ${errors.duration ? 'border-red-500' : ''}`}\r\n            required\r\n          />\r\n          {errors.duration && (\r\n            <p className=\"text-red-500 text-sm mt-1\">{errors.duration}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Intensity</label>\r\n          <select\r\n            name=\"intensity\"\r\n            value={workoutData.intensity}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\"\r\n          >\r\n            <option value=\"low\">Low</option>\r\n            <option value=\"moderate\">Moderate</option>\r\n            <option value=\"high\">High</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Date Logged</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date_logged\"\r\n            value={workoutData.date_logged}\r\n            onChange={handleChange}\r\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm ${errors.date_logged ? 'border-red-500' : ''}`}\r\n            required\r\n          />\r\n          {errors.date_logged && (\r\n            <p className=\"text-red-500 text-sm mt-1\">{errors.date_logged}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Notes</label>\r\n          <textarea\r\n            name=\"notes\"\r\n            value={workoutData.notes}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"flex justify-end space-x-4\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate('/workouts')}\r\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n            className=\"px-4 py-2 text-white bg-green-500 rounded-md disabled:opacity-50\"\r\n          >\r\n            {isSubmitting ? 'Saving...' : (id ? 'Update' : 'Create')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default WorkoutForm;\r\n"],"names":["WorkoutForm","id","useParams","navigate","useNavigate","fetchWorkouts","useWorkout","isSubmitting","setIsSubmitting","useState","errors","setErrors","workoutData","setWorkoutData","workout_type","duration","intensity","notes","date_logged","Date","toISOString","split","useEffect","async","existingWorkout","workoutService","getWorkout","console","log","err","handledError","errorHandler","handleApiError","loadWorkoutData","handleChange","e","name","value","target","prev","_jsxs","onSubmit","preventDefault","updateWorkout","createWorkout","className","children","_jsx","onChange","label","map","type","required","rows","onClick","disabled"],"sourceRoot":""}